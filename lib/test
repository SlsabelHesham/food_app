import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class Home extends StatelessWidget {
  const Home({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color.fromARGB(255, 246, 247, 254),
      body: SafeArea(
        child: SingleChildScrollView(
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                _buildHeader(),
                const SizedBox(height: 20),
                _buildSearchBar(),
                const SizedBox(height: 20),
                _buildBanner(),
                const SizedBox(height: 20),
                _buildSectionTitle("Nearest Restaurant", () {}),
                const SizedBox(height: 10),
                _buildRestaurantList(context),
                const SizedBox(height: 20),
                _buildSectionTitle("Popular Menu", () {}),
                const SizedBox(height: 10),
                _buildPopularMenu(),
                const SizedBox(height: 20),
                _buildSectionTitle("Popular Restaurant", () {}),
                const SizedBox(height: 10),
                _buildRestaurantList(context),
              ],
            ),
          ),
        ),
      ),
    );
  }

  // Header Section
  Widget _buildHeader() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        const Text(
          "Find Your Favorite Food",
          style: TextStyle(
            fontSize: 22,
            fontWeight: FontWeight.bold,
          ),
        ),
        IconButton(
          icon: const Icon(Icons.notifications),
          onPressed: () {},
        ),
      ],
    );
  }

  // Search Bar
  Widget _buildSearchBar() {
    return Row(
      children: [
        Expanded(
          child: TextField(
            decoration: InputDecoration(
              hintText: "What do you want to order?",
              prefixIcon: const Icon(Icons.search),
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(12.0),
                borderSide: BorderSide.none,
              ),
              filled: true,
              fillColor: Colors.grey[200],
            ),
          ),
        ),
        const SizedBox(width: 10),
        Container(
          padding: const EdgeInsets.all(10.0),
          decoration: BoxDecoration(
            color: Colors.orange[100],
            borderRadius: BorderRadius.circular(12),
          ),
          child: const Icon(Icons.filter_list),
        ),
      ],
    );
  }

  // Banner Section
  Widget _buildBanner() {
    return Container(
      width: double.infinity,
      height: 150,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(16),
        image: const DecorationImage(
          image: AssetImage("assets/images/promo_advertising.png"),
          fit: BoxFit.cover,
        ),
      ),
    );
  }

  // Section Title
  Widget _buildSectionTitle(String title, VoidCallback onViewMore) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Text(
          title,
          style: const TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
          ),
        ),
        TextButton(
          onPressed: onViewMore,
          child: const Text("View More"),
        ),
      ],
    );
  }

  // Nearest Restaurant List
  /*Widget _buildRestaurantList() {
    return Row(
      children: [
        _buildRestaurantCard("Vegan Resto", "12 Mins"),
        const SizedBox(width: 10),
        _buildRestaurantCard("Healthy Food", "8 Mins"),
      ],
    );
  }*/


Widget _buildRestaurantCard(String name, String time, String imageUrl, BuildContext context) {
      double screenWidth = MediaQuery.of(context).size.width; // عرض الشاشة

  return Container(
    //width: MediaQuery(data: data, child: child),
    width: screenWidth /2.3,
    padding: const EdgeInsets.all(16.0),
    margin: const EdgeInsets.symmetric(vertical: 8.0), // Add some spacing between cards
    decoration: BoxDecoration(
      color: Colors.white,
      borderRadius: BorderRadius.circular(16),
      boxShadow: [
        BoxShadow(
          color: Colors.grey.withOpacity(0.1),
          blurRadius: 6,
          offset: const Offset(0, 3),
        ),
      ],
    ),
    child: Column(
      mainAxisSize: MainAxisSize.min, // Shrink-wrap the content
      children: [
        //Icon(Icons.restaurant, size: 40, color: Colors.orange[400]),
        Image.network(
              imageUrl,
              height: 80,
              //width: ,
              fit: BoxFit.cover,
            ),
        const SizedBox(height: 10),
        Text(
          name,
          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
        ),
        const SizedBox(height: 5),
        Text(
          time,
          style: TextStyle(color: Colors.grey[600], fontSize: 14),
        ),
      ],
    ),
  );
}

 /*Image.asset(
      'assets/images/promo_advertising',
      height: 40, 
      width: 40,  
      fit: BoxFit.cover, 
    ),*/

/*
Widget _buildRestaurantCard(String name, String time, String imageUrl ) {
    return Expanded(
      child: Container(
        padding: const EdgeInsets.all(16.0),
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(16),
          boxShadow: [
            BoxShadow(
              color: Colors.grey.withOpacity(0.1),
              blurRadius: 6,
              offset: const Offset(0, 3),
            ),
          ],
        ),
        child: Column(
          children: [
            if (imageUrl.isNotEmpty)
          ClipRRect(
            borderRadius: BorderRadius.circular(12),
            child: Image.network(
              imageUrl,
              height: 0,
              width: 0,
              fit: BoxFit.cover,
            ),
          ),            const SizedBox(height: 10),
            Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),
            const SizedBox(height: 5),
            Text(time, style: TextStyle(color: Colors.grey[600])),
          ],
        ),
      ),
    );
  }
*/

/*
 Widget _buildRestaurantCard(String name, String time, String imageUrl) {
  return Container(
    margin: const EdgeInsets.symmetric(vertical: 8.0),
    decoration: BoxDecoration(
      color: Colors.white,
      borderRadius: BorderRadius.circular(16),
      boxShadow: [
        BoxShadow(
          color: Colors.grey.withOpacity(0.1),
          blurRadius: 6,
          offset: const Offset(0, 3),
        ),
      ],
    ),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start, // ضبط محاذاة الأعمدة
      children: [
        // عرض الصورة فقط إذا كانت URL غير فارغة
        if (imageUrl.isNotEmpty)
          ClipRRect(
            borderRadius: BorderRadius.circular(12),
            child: Image.network(
              imageUrl,
              height: 80, // تحديد الارتفاع الثابت للصورة
              width: 80,  // تحديد العرض الثابت للصورة
              fit: BoxFit.cover,
            ),
          ),
        const SizedBox(height: 10),  // مسافة بين الصورة والنصوص
        Padding(
          padding: const EdgeInsets.symmetric(horizontal: 16.0),  // المسافة الجانبية
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,  // محاذاة النصوص
            children: [
              Text(
                name,
                style: const TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 16,
                ),
              ),
              const SizedBox(height: 4),
              Text(
                time,
                style: TextStyle(color: Colors.grey[600]),
              ),
            ],
          ),
        ),
      ],
    ),
  );
}

*/

  Widget _buildPopularMenu() {
  return StreamBuilder<QuerySnapshot>(
    stream: FirebaseFirestore.instance.collection('popularMenu').snapshots(),
    builder: (context, snapshot) {
      if (snapshot.connectionState == ConnectionState.waiting) {
        return const Center(child: CircularProgressIndicator());
      }
      if (snapshot.hasError) {
        return const Center(child: Text("Error loading data"));
      }
      if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
        return const Center(child: Text("No popular meals found"));
      }

      final meals = snapshot.data!.docs;

      return Column(
        children: meals.map((meal) {
          final data = meal.data() as Map<String, dynamic>;
          return _buildMenuCard(
            data['name'] ?? "No Name", 
            data['restaurantName'] ?? "No Restaurant", 
            data['image'] ?? "", 
            data['price']?.toString() ?? "No Price", 
          );
        }).toList(),
      );
    },
  );
}



/*
  Widget _buildMenuCard(String name, String rating) {
    return Container(
      padding: const EdgeInsets.all(16.0),
      margin: const EdgeInsets.only(left: 8, right: 8),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            blurRadius: 6,
            offset: const Offset(0, 3),
          ),
        ],
      ),
      child: Column(
        children: [
          Icon(Icons.fastfood, size: 40, color: Colors.orange[400]),
          const SizedBox(height: 10),
          Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),
          const SizedBox(height: 5),
          Text(rating, style: TextStyle(color: Colors.grey[600])),
        ],
      ),
    );
  }
*/
Widget _buildMenuCard(String name, String restaurantName, String imageUrl, String price) {
  return Container(
    margin: const EdgeInsets.symmetric(vertical: 8.0),
    padding: const EdgeInsets.symmetric(horizontal: 8.0),
    decoration: BoxDecoration(
      color: Colors.white,
      borderRadius: BorderRadius.circular(16),
      boxShadow: [
        BoxShadow(
          color: Colors.grey.withOpacity(0.1),
          blurRadius: 6,
          offset: const Offset(0, 3),
        ),
      ],
    ),
    child: Row(
      children: [
        if (imageUrl.isNotEmpty)
          ClipRRect(
            borderRadius: BorderRadius.circular(15),
            child: Image.network(
              imageUrl,
              height: 80,
              width: 100,
              fit: BoxFit.cover,
            ),
          ),
        const SizedBox(width: 16),
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                name,
                style: const TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 16,
                ),
              ),
              const SizedBox(height: 4),
              Text(
                restaurantName,
                style: TextStyle(color: Colors.grey[600]),
              ),
            ],
          ),
        ),
        Column(
          children: [
            Text(
              price,
              style: const TextStyle(
                fontSize: 22,
                fontWeight: FontWeight.bold,
                color: Colors.orange,
              ),
            ),
          ],
        ),
      ],
    ),
  );
}


Widget _buildRestaurantList(BuildContext context) {
  return StreamBuilder<QuerySnapshot>(
    stream: FirebaseFirestore.instance.collection('restaurants').snapshots(),
    builder: (context, snapshot) {
      if (snapshot.connectionState == ConnectionState.waiting) {
        return const Center(child: CircularProgressIndicator());
      }
      if (snapshot.hasError) {
        return const Center(child: Text("Error loading data"));
      }
      if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
        return const Center(child: Text("No restaurants found"));
      }

      final restaurants = snapshot.data!.docs;

      return SizedBox(
        height: 180, 
        child: ListView.builder(
          scrollDirection: Axis.horizontal, 
          itemCount: restaurants.length,
          itemBuilder: (context, index) {
            final data = restaurants[index].data() as Map<String, dynamic>;
            return Padding(
              padding: const EdgeInsets.only(right: 10.0), 
              child: _buildRestaurantCard(
                data['name'] ?? "No Name",
                "12 min", // بيانات الوقت (تجريبية)
                data['image'] ?? "image",
                context,
              ),
            );
          },
        ),
      );
    },
  );
}

}
